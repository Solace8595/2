@model List<Pastar.ViewModels.BoxViewModel>
@{
    ViewData["Title"] = "Корзина";
}

<div class="container py-5">
    <h1 class="text-center mb-5">Ваша корзина</h1>

    @if (!Model.Any())
    {
        <p class="text-center fs-4">Корзина пуста</p>
    }
    else
    {
        <table class="table align-middle">
            <thead>
                <tr>
                    <th></th>
                    <th>Название</th>
                    <th>Цена</th>
                    <th>Количество</th>
                    <th>Сумма</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var box in Model)
                {
                    <tr>
                        <td style="width: 120px;">
                            <img src="@box.ImagePaths.FirstOrDefault()" class="img-thumbnail" style="max-height: 100px;" />
                        </td>
                        <td>@box.BoxName</td>
                        <td>@box.BoxPrice.ToString("0.00") ₽</td>
                        <td>
                            <div class="d-flex align-items-center gap-2">
                                <button class="btn btn-outline-secondary" onclick="updateCart(@box.BoxId, -1)">−</button>
                                <span id="quantity-@box.BoxId">@box.Quantity</span>
                                <button class="btn btn-outline-secondary" onclick="updateCart(@box.BoxId, 1)">+</button>
                            </div>
                        </td>
                        <td>@(box.BoxPrice * box.Quantity).ToString("0.00") ₽</td>
                        <td>
                            <button class="btn btn-outline-danger btn-sm" onclick="removeBox(@box.BoxId)">Удалить</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="text-end mt-4">
            <h4>Итого: @Model.Sum(b => b.BoxPrice * b.Quantity).ToString("0.00") ₽</h4>
        </div>
    }
</div>

@section Scripts {
    <script>
        function updateCart(boxId, delta) {
            let span = document.getElementById('quantity-' + boxId);
            let current = parseInt(span.textContent);
            let newQuantity = Math.max(0, current + delta);

            fetch('/Cart/UpdateQuantity', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ boxId: boxId, quantity: newQuantity })
            }).then(() => {
                if (newQuantity === 0) {
                    location.reload();
                } else {
                    span.textContent = newQuantity;
                    location.reload();
                }
            });
        }

        function removeBox(boxId) {
            fetch('/Cart/RemoveFromCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ boxId: boxId })
            }).then(() => location.reload());
        }
    </script>
    @Html.AntiForgeryToken()
}
